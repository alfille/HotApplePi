/* Calculate optimal polynmomial for HotApplePi Box */
/* See https://github.com/alfille/HotApplePi */
/* Here curve is centered on s=0, symmetric (even function) */
/* Satisfies f*(L-f)=C*sqrt(1-f'^2), f the function, L length, C constant */
/* f'(0)=0, f(-.5)=f(.5)=0 */
/* Run on maxima: load("./poly.mac") */

/*
  Version 9
  Add factor f(s)=(w^2-s^2)g(s)
*/

kill(all);
/* Common factor */
c(i):=1/(alpha^(i-1)*L^(i-1)*w^(2*i)*(1-alpha)^(i-1)*i!);

/* Highest order term */ 
N:10;

/* g function */
/* Sum over even elements */
g:alpha*L/w^2+sum(c(2*k)*a[2*k]*s^(2*k),k,1,N/2);
dg:diff(g,s);
ddg:diff(dg,s);

/* f function */
f:(w^2-s^2)*g;
df:(w^2-s^2)*dg-2*s*g;
ddf:(w^2-s^2)*ddg-4*s*dg-2*g;

/* At midpoint */
g0:ev(g,s=0,factor);
dg0:dg,s=0,factor;
f0:w^2*g0;
df0:w^2*dg0;

/* at endpoint */
gw:ev(g,s=w);
dgw:dg,s=w,factor;
fw:0;
dfw:-2*w*gw;

C:f0*(L-f0);

E:f^2*(L-f)^2-C^2*(1-df^2);
T:taylor(E,s,0,N);

for i:2 step 2 thru N do
  block (
    [CO,Sol],
    CO: coeff( T, s, i ),
    Sol:solve( CO, a[i] ),
    if 
      part(Sol,1,2)=0 
    then 
      Sol:solve( CO/a[i], a[i] ), 
    S[i]:ev(part( Sol,1),factor)
  ) ;

for i: 2 step 2 thru N do
  for j: i+2 step 2 thru N do
	S[j]:ev(S[j],S[i],factor) ;

for i:0 step 2 thru N do
  factor(display(S[i]));

F:ev(f,w=1/2);
DFW:ev(dfw+1,w=1/2);
DDF0:ev(ddf,w=1/2,s=0);
for i:2 step 2 thru N do
  block (
    F:ev(F,S[i],w=1/2,factor),
    DFW:ev(DFW,S[i],w=1/2,factor),
    DDF0:ev(DFW,S[i],w=1/2,factor)
  );
/*
LL:[0.01,0.02,0.05,0.1,0.2,0.5,0.7,0.8,0.9,1,1.1,1.2,1.5,2,5,10,20,50];
*/
LL:[1,1.1,1.2,1.5,2,5,10,20,50];

A:makelist(
	sublist(map(rhs,bfallroots(ev(part(DFW,1,1),L=l))),numberp)
	,l,LL);
alpha_max:min(ev(rhs(solve(f0-L/2,alpha)[1]),w=1/2),ev(1/w^2,w=1/2));
display(alpha_max);

AA:makelist(sublist(a,lambda([x],is((x>0.) and (x<alpha_max)))),a,A);

AA:makelist(lmax(sublist(AA[i],lambda([x],is(ev(DDF0,alpha=x,L=LL[i])<=0)))),i,1,length(LL));
display(AA);

plot2d(makelist(ev(F,alpha=AA[i],L=LL[i]),i,1,length(LL)),[s,0,.5],[y,0,.4],cons(legend,map(string,LL)));

/*
display(F);
*/    
