/* Calculate optimal polynmomial for HotApplePi Box */
/* See https://github.com/alfille/HotApplePi */
/* Here curve is centered on s=0, symmetric (even function) */
/* Satisfies f*(L-f)=C*sqrt(1-f'^2), f the function, L length, C constant */
/* f'(0)=0, f(-.5)=f(.5)=0 */
/* Run on maxima: load("./poly.mac") */

/*
  Version 4
  Use substitution:
    b0 = a0-L
    equivalently L=a0-b0
  Factor out a common term (-1)^(i/2)*(2*a0-L)/(a0^(i-1)*(a0-L)^(i-1)*i!)
  Also test for an all-zero trivial solution
*/

kill(all);
/* Common factor */
c(i):=(-1)^(i/2)*(1-2*a)/(a^(i-1)*(1-a)^(i-1)*i!*L^(i-1));
/* Highest order term */
N:12;
/* Sum over even elements */
f:a*L+sum(c(2*k)*a[2*k]*s^(2*k),k,1,N/2);
df:diff(f,s);

E:f^2*(L-f)^2-(a*L)^2*(L-a*L)^2*(1-df^2);
T:taylor(E,s,0,N);

for i:2 step 2 thru N do
  block (
    [CO,Sol],
    CO: coeff( T, s, i ),
    Sol:solve( CO, a[i] ),
    if 
      part(Sol,1,2)=0 
    then 
      Sol:solve( CO/a[i], a[i] ), 
    S[i]:ev(part( Sol,1),factor)
  ) ;

for i: 2 step 2 thru N do
  for j: i+2 step 2 thru N do
	S[j]:ev(S[j],S[i],factor) ;

for i:2 step 2 thru N do 
  block (
    P[i]:part(S[i],2),
    display(P[i]) 
    );
    
infaclim:false;
factorflag:true;

Factors(i):=append([1],makelist(factor(part(P[i],j,1)),j,2,i/2));
for i:2 step 2 thru N do
  block (
    print("\\\\[P(",i,")=",tex1(Factors(i)),"\\\\]")
    );

Factors2(i):=append([1],makelist(part(P[i],j,1),j,2,i-2),[1]);
for i:2 step 2 thru N do
  block (
    [S],
    S:lsum(x,x,Factors2(i)),
    print("\\\\[p(",i,")=",S,"\\\\]")
    );
for i:2 step 2 thru N do
  block (
    CVG[i]:lsum(x,x,Factors2(i))*2^i/i!,
    print("\\\\[{{2\\^{",i,"}}\\over{",i,"!}}p(",i,")=",tex1(CVG[i]),"\\\\]")
    );

plot2d([discrete,makelist([2*i,CVG[2*i]],i,N/2)],logy);

/*
F:a0+sum(c(2*i)*part(S[2*i],2)*s^(2*i),i,1,N/2);
display(F);
*/    
